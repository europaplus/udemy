{"ast":null,"code":"var _jsxFileName = \"/Users/knfonda/WebstormProjects/udemy/ExamplesReact/mini-social/src/components/app/app.js\";\nimport React, { Component } from 'react';\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport PostStatusFilter from \"../post-status-filter\";\nimport PostList from \"../post-list\";\nimport PostAddForm from \"../post-add-form\";\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        label: 'Going to learn React',\n        important: true,\n        like: false,\n        id: 1\n      }, {\n        label: 'That is so good',\n        important: false,\n        like: false,\n        id: 2\n      }, {\n        label: 'I need a break...',\n        important: false,\n        like: false,\n        id: 3\n      }]\n    };\n    this.deleteItem = this.deleteItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.onToggleImportant = this.onToggleImportant.bind(this);\n    this.onToggleLiked = this.onToggleLiked.bind(this);\n    this.maxId = 4;\n  }\n\n  deleteItem(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const newArray = [...data.slice(0, index), ...data.slice(index + 1)];\n      return {\n        data: newArray\n      };\n    });\n  }\n\n  addItem(body) {\n    const newItem = {\n      label: body,\n      important: false,\n      id: ++this.maxId\n    };\n    this.setState(({\n      data\n    }) => {\n      const newArr = [...data, newItem];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  onToggleImportant(id) {\n    console.log(`Important ${id}`);\n  }\n\n  onToggleLiked(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const old = data[index];\n      const newItem = { ...old,\n        like: !old.like\n      };\n      const newArray = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        data: newArray\n      };\n    });\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    const liked = data.filter(item => item.like).length;\n    const allPosts = data.length;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        liked: liked,\n        allPosts: allPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-panel d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(SearchPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PostStatusFilter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostList, {\n        posts: this.state.data,\n        onDelete: this.deleteItem,\n        onToggleImportant: this.onToggleImportant,\n        onToggleLiked: this.onToggleLiked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostAddForm, {\n        onAdd: this.addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/knfonda/WebstormProjects/udemy/ExamplesReact/mini-social/src/components/app/app.js"],"names":["React","Component","AppHeader","SearchPanel","PostStatusFilter","PostList","PostAddForm","App","constructor","props","state","data","label","important","like","id","deleteItem","bind","addItem","onToggleImportant","onToggleLiked","maxId","setState","index","findIndex","elem","newArray","slice","body","newItem","newArr","console","log","old","render","liked","filter","item","length","allPosts"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport PostStatusFilter from \"../post-status-filter\";\nimport PostList from \"../post-list\";\nimport PostAddForm from \"../post-add-form\";\n\nimport './app.css';\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [\n                {label: 'Going to learn React', important: true, like: false, id: 1},\n                {label: 'That is so good', important: false, like: false, id: 2},\n                {label: 'I need a break...', important: false, like: false, id: 3},\n            ],\n        }\n        this.deleteItem = this.deleteItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n        this.onToggleImportant = this.onToggleImportant.bind(this);\n        this.onToggleLiked = this.onToggleLiked.bind(this);\n        this.maxId = 4;\n    }\n    deleteItem(id) {\n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n            const newArray = [...data.slice(0, index), ...data.slice(index + 1)];\n            return {\n                data: newArray,\n            }\n        });\n    }\n    addItem(body) {\n        const newItem = {\n            label: body,\n            important: false,\n            id: ++this.maxId,\n        }\n        this.setState(({data}) => {\n            const newArr = [...data, newItem];\n            return {\n                data: newArr,\n            }\n        })\n    }\n    onToggleImportant(id) {\n        console.log(`Important ${id}`);\n    }\n    onToggleLiked(id) {\n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n            const old = data[index];\n            const newItem = {...old, like: !old.like};\n            const newArray = [...data.slice(0, index), newItem,...data.slice(index + 1)];\n            return {\n                data: newArray,\n            }\n        });\n    }\n    render() {\n        const {data} = this.state;\n        const liked = data.filter(item => item.like).length;\n        const allPosts = data.length;\n\n        return (\n            <div className=\"app\">\n                <AppHeader\n                    liked={liked}\n                    allPosts={allPosts}\n                />\n                <div className=\"search-panel d-flex\">\n                    <SearchPanel/>\n                    <PostStatusFilter/>\n                </div>\n                <PostList\n                    posts={this.state.data}\n                    onDelete={this.deleteItem}\n                    onToggleImportant={this.onToggleImportant}\n                    onToggleLiked={this.onToggleLiked}\n                />\n                <PostAddForm\n                    onAdd={this.addItem}\n                />\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}